// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PokemonAPI.Migrations
{
    [DbContext(typeof(PokemonDb))]
    partial class PokemonDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PokemonAPI.Models.AbilityDao", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("PokemonAPI.Models.PokemonDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokemonAPI.Models.TypeDao", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("PokemonAbilities", b =>
                {
                    b.Property<string>("AbilitiesName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PokemonsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AbilitiesName", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonAbilities");
                });

            modelBuilder.Entity("PokemonTypes", b =>
                {
                    b.Property<int>("PokemonsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypesName")
                        .HasColumnType("TEXT");

                    b.HasKey("PokemonsId", "TypesName");

                    b.HasIndex("TypesName");

                    b.ToTable("PokemonTypes");
                });

            modelBuilder.Entity("PokemonAbilities", b =>
                {
                    b.HasOne("PokemonAPI.Models.AbilityDao", null)
                        .WithMany()
                        .HasForeignKey("AbilitiesName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonAPI.Models.PokemonDao", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonTypes", b =>
                {
                    b.HasOne("PokemonAPI.Models.PokemonDao", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonAPI.Models.TypeDao", null)
                        .WithMany()
                        .HasForeignKey("TypesName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
